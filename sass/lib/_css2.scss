@charset "utf-8";
//  ____     ____
// /\  _`\  /\  _`\   /'\_/`\
// \ \ \L\ \\ \ \L\_\/\      \
//  \ \  _ <'\ \  _\L\ \ \__\ \
//   \ \ \L\ \\ \ \L\ \ \ \_/\ \
//    \ \____/ \ \____/\ \_\\ \_\
//     \/___/   \/___/  \/_/ \/_/

$elementSeparator: '__';
$modifierSeparator: '--';

@function containsModifier($selector) {
    $selector: selectorToString($selector);
    @if str-index($selector, $modifierSeparator) {
        @return true;
    } @else {
        @return false;
    }
}

@function selectorToString($selector) {
    $selector: inspect($selector);

    //cast to string
    $selector: str-slice($selector, 2, -2);

    //remove brackets
    @return $selector;
}

@function getBlock($selector) {
    $selector: selectorToString($selector);
    $modifierStart: str-index($selector, $modifierSeparator) - 1;
    @return str-slice($selector, 0, $modifierStart);
}

@mixin BLOCK($block) {
    .#{$block} {
        @content;
    }
}

@mixin ELEMENT($element) {
    $selector: &;
    @if containsModifier($selector) {
        $block: getBlock($selector);

        @at-root #{$selector} {
            #{$block + $elementSeparator + $element} {
                @content;
            }
        }
    }
    @else {
        @at-root #{$selector + $elementSeparator + $element} {
            @content;
        }
    }
}

@mixin MODIFIER($modifier) {
    @at-root {
        #{&}#{$modifierSeparator+$modifier} {
            @content;
        }
    }
}
