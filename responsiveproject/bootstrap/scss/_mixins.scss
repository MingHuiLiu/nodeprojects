@charset "utf-8";

//                                                __
//                                               /\ \__
//   ____     __   _____      __     _ __    __  \ \ ,_\    __
//  /',__\  /'__`\/\ '__`\  /'__`\  /\`'__\/'__`\ \ \ \/  /'__`\
// /\__, `\/\  __/\ \ \L\ \/\ \L\.\_\ \ \//\ \L\.\_\ \ \_/\  __/
// \/\____/\ \____\\ \ ,__/\ \__/.\_\\ \_\\ \__/.\_\\ \__\ \____\
//  \/___/  \/____/ \ \ \/  \/__/\/_/ \/_/ \/__/\/_/ \/__/\/____/
//                   \ \_\
//                    \/_/

@mixin when($alias) {
  @if $alias == mobile {
    @media (max-width: $mobileBreakPointWidth) {
      @content;
    }
  }
}

//                                                __
//                                               /\ \__
//   ____     __   _____      __     _ __    __  \ \ ,_\    __
//  /',__\  /'__`\/\ '__`\  /'__`\  /\`'__\/'__`\ \ \ \/  /'__`\
// /\__, `\/\  __/\ \ \L\ \/\ \L\.\_\ \ \//\ \L\.\_\ \ \_/\  __/
// \/\____/\ \____\\ \ ,__/\ \__/.\_\\ \_\\ \__/.\_\\ \__\ \____\
//  \/___/  \/____/ \ \ \/  \/__/\/_/ \/_/ \/__/\/_/ \/__/\/____/
//                   \ \_\
//                    \/_/
@mixin toe {
  //文字省略号
  overflow: hidden !important;
  white-space: nowrap !important;
  text-overflow: ellipsis !important;
}

//                                                __
//                                               /\ \__
//   ____     __   _____      __     _ __    __  \ \ ,_\    __
//  /',__\  /'__`\/\ '__`\  /'__`\  /\`'__\/'__`\ \ \ \/  /'__`\
// /\__, `\/\  __/\ \ \L\ \/\ \L\.\_\ \ \//\ \L\.\_\ \ \_/\  __/
// \/\____/\ \____\\ \ ,__/\ \__/.\_\\ \_\\ \__/.\_\\ \__\ \____\
//  \/___/  \/____/ \ \ \/  \/__/\/_/ \/_/ \/__/\/_/ \/__/\/____/
//                   \ \_\
//                    \/_/
@mixin textCenter {
  //文字居中
  text-align: center !important;
}

//                                                __
//                                               /\ \__
//   ____     __   _____      __     _ __    __  \ \ ,_\    __
//  /',__\  /'__`\/\ '__`\  /'__`\  /\`'__\/'__`\ \ \ \/  /'__`\
// /\__, `\/\  __/\ \ \L\ \/\ \L\.\_\ \ \//\ \L\.\_\ \ \_/\  __/
// \/\____/\ \____\\ \ ,__/\ \__/.\_\\ \_\\ \__/.\_\\ \__\ \____\
//  \/___/  \/____/ \ \ \/  \/__/\/_/ \/_/ \/__/\/_/ \/__/\/____/
//                   \ \_\
//                    \/_/
@mixin blockCenter {
  //块居中
  margin-left: auto !important;
  margin-right: auto !important;
}

//                                                __
//                                               /\ \__
//   ____     __   _____      __     _ __    __  \ \ ,_\    __
//  /',__\  /'__`\/\ '__`\  /'__`\  /\`'__\/'__`\ \ \ \/  /'__`\
// /\__, `\/\  __/\ \ \L\ \/\ \L\.\_\ \ \//\ \L\.\_\ \ \_/\  __/
// \/\____/\ \____\\ \ ,__/\ \__/.\_\\ \_\\ \__/.\_\\ \__\ \____\
//  \/___/  \/____/ \ \ \/  \/__/\/_/ \/_/ \/__/\/_/ \/__/\/____/
//                   \ \_\
//                    \/_/
@mixin siteColorConfig {
  ::selection {
    background: $bgc_selection;
    color: $color_selectioin;
  }

  //站点通用配置
  //链接颜色
  a {
    color: $color_link;

    &:hover {
      color: $color_link__Hover;
    }
  }

  //全局字体和行高设定
  html {
    font: ($fontSize_normal / 1) $fontFamily_normal;
  }
}

//2个等级的字体
@mixin setfontfamily($type) {
  @if $type == 1 {
    font-family: $fontFamily_normal;
  }

  @if $type == 2 {
    font-family: $fontFamily_special;
  }
}

//4个等级的字体大小
@mixin setfontsize($type) {
  @if $type == 1 {
    font-size: $fontSize_small;
  }

  @if $type == 2 {
    font-size: $fontSize_normal;
  }

  @if $type == 3 {
    font-size: $fontSize_title_normal;
  }

  @if $type == 4 {
    font-size: $fontSize_title_large;
  }
}

//                                                __
//                                               /\ \__
//   ____     __   _____      __     _ __    __  \ \ ,_\    __
//  /',__\  /'__`\/\ '__`\  /'__`\  /\`'__\/'__`\ \ \ \/  /'__`\
// /\__, `\/\  __/\ \ \L\ \/\ \L\.\_\ \ \//\ \L\.\_\ \ \_/\  __/
// \/\____/\ \____\\ \ ,__/\ \__/.\_\\ \_\\ \__/.\_\\ \__\ \____\
//  \/___/  \/____/ \ \ \/  \/__/\/_/ \/_/ \/__/\/_/ \/__/\/____/
//                   \ \_\
//                    \/_/
@mixin layout-w-1-2 {
  width: percentage(1 / 2);
}

@mixin layout-w-1-3 {
  width: percentage(1 / 3);
}

@mixin layout-w-2-3 {
  width: percentage(2 / 3);
}

@mixin layout-w-1-4 {
  width: percentage(1 / 4);
}

@mixin layout-w-3-4 {
  width: percentage(3 / 4);
}

@mixin layout-w-1-5 {
  width: percentage(1 / 5);
}

@mixin layout-w-2-5 {
  width: percentage(2 / 5);
}

@mixin layout-w-3-5 {
  width: percentage(3 / 5);
}

@mixin layout-w-4-5 {
  width: percentage(4 / 5);
}

//                                                __
//                                               /\ \__
//   ____     __   _____      __     _ __    __  \ \ ,_\    __
//  /',__\  /'__`\/\ '__`\  /'__`\  /\`'__\/'__`\ \ \ \/  /'__`\
// /\__, `\/\  __/\ \ \L\ \/\ \L\.\_\ \ \//\ \L\.\_\ \ \_/\  __/
// \/\____/\ \____\\ \ ,__/\ \__/.\_\\ \_\\ \__/.\_\\ \__\ \____\
//  \/___/  \/____/ \ \ \/  \/__/\/_/ \/_/ \/__/\/_/ \/__/\/____/
//                   \ \_\
//                    \/_/
//这个可以这样用
// <div class="ct-container2">容器
//   <span class="ct-content">！！！！这个必须是span！！！！
//     <div class="maxwidth400"这个必须是inlineblock如果要自动水平居中的话><h1>Some text</h1><p>But he stole up to us again, and suddenly clapping his hand on my shoulder, said—"Did ye see anything looking like men going towards that ship a while ago?"</p></div>
//   </span><b class="ct-faker"></b>这个必须写出来
// </div>
//.ct-container2{@include center-tablecelinline(800,400)}
//但是如果内容大过一屏的话就只能在大过一屏的大内容块里面居中所以更加通用的弹窗用不了这个东西
@mixin center-tablecellinline($width, $height) {
  & {
    width: if(unitless($width), #{$width}px, $width);
    height: if(unitless($height), #{$height}px, $height);
    display: table;
    text-align: center;

    .ct-content {
      display: table-cell;
      vertical-align: middle;
      *display: inline-block;
    }

    .ct-faker {
      display: inline-block;
      height: 100%;
      vertical-align: middle;
    }
  }
}

//                                                __
//                                               /\ \__
//   ____     __   _____      __     _ __    __  \ \ ,_\    __
//  /',__\  /'__`\/\ '__`\  /'__`\  /\`'__\/'__`\ \ \ \/  /'__`\
// /\__, `\/\  __/\ \ \L\ \/\ \L\.\_\ \ \//\ \L\.\_\ \ \_/\  __/
// \/\____/\ \____\\ \ ,__/\ \__/.\_\\ \_\\ \__/.\_\\ \__\ \____\
//  \/___/  \/____/ \ \ \/  \/__/\/_/ \/_/ \/__/\/_/ \/__/\/____/
//                   \ \_\
//                    \/_/

@mixin bgrgba($args...) {
  @if type-of(nth($args, 1)) == "color" {
    background: rgba(nth($args, 1), nth($args, 2));
    filter: progid:DXImageTransform.Microsoft.gradient(enabled='true',startcolorstr=#{ie-hex-str(rgba(nth($args, 1), nth($args, 2)))},endcolorstr=#{ie-hex-str(rgba(nth($args, 1), nth($args, 2)))});
  }

  @if type-of(nth($args, 1)) == "number" {
    background: rgba(nth($args, 1), nth($args, 2), nth($args, 3), nth($args, 4));
    filter: progid:DXImageTransform.Microsoft.gradient(enabled='true',startcolorstr=#{ie-hex-str(rgba(nth($args, 1), nth($args, 2), nth($args, 3), nth($args, 4)))},endcolorstr=#{ie-hex-str(rgba(nth($args, 1), nth($args, 2), nth($args, 3), nth($args, 4)))});
  }
}

//                                                __
//                                               /\ \__
//   ____     __   _____      __     _ __    __  \ \ ,_\    __
//  /',__\  /'__`\/\ '__`\  /'__`\  /\`'__\/'__`\ \ \ \/  /'__`\
// /\__, `\/\  __/\ \ \L\ \/\ \L\.\_\ \ \//\ \L\.\_\ \ \_/\  __/
// \/\____/\ \____\\ \ ,__/\ \__/.\_\\ \_\\ \__/.\_\\ \__\ \____\
//  \/___/  \/____/ \ \ \/  \/__/\/_/ \/_/ \/__/\/_/ \/__/\/____/
//                   \ \_\
//                    \/_/

@mixin float($side) {
  float: unquote($side);
  display: inline-block;
}

//                                                __
//                                               /\ \__
//   ____     __   _____      __     _ __    __  \ \ ,_\    __
//  /',__\  /'__`\/\ '__`\  /'__`\  /\`'__\/'__`\ \ \ \/  /'__`\
// /\__, `\/\  __/\ \ \L\ \/\ \L\.\_\ \ \//\ \L\.\_\ \ \_/\  __/
// \/\____/\ \____\\ \ ,__/\ \__/.\_\\ \_\\ \__/.\_\\ \__\ \____\
//  \/___/  \/____/ \ \ \/  \/__/\/_/ \/_/ \/__/\/_/ \/__/\/____/
//                   \ \_\
//                    \/_/

@mixin clearfix {
  display: block;
  *zoom: 1;

  &:after {
    content: "\20";
    display: block;
    height: 0;
    clear: both;
    visibility: hidden;
    overflow: hidden;
  }
}

//                                                __
//                                               /\ \__
//   ____     __   _____      __     _ __    __  \ \ ,_\    __
//  /',__\  /'__`\/\ '__`\  /'__`\  /\`'__\/'__`\ \ \ \/  /'__`\
// /\__, `\/\  __/\ \ \L\ \/\ \L\.\_\ \ \//\ \L\.\_\ \ \_/\  __/
// \/\____/\ \____\\ \ ,__/\ \__/.\_\\ \_\\ \__/.\_\\ \__\ \____\
//  \/___/  \/____/ \ \ \/  \/__/\/_/ \/_/ \/__/\/_/ \/__/\/____/
//                   \ \_\
//                    \/_/
@mixin opacity($opacity) {
  opacity: $opacity;
  filter: alpha(opacity = $opacity * 100);
}

//                                                __
//                                               /\ \__
//   ____     __   _____      __     _ __    __  \ \ ,_\    __
//  /',__\  /'__`\/\ '__`\  /'__`\  /\`'__\/'__`\ \ \ \/  /'__`\
// /\__, `\/\  __/\ \ \L\ \/\ \L\.\_\ \ \//\ \L\.\_\ \ \_/\  __/
// \/\____/\ \____\\ \ ,__/\ \__/.\_\\ \_\\ \__/.\_\\ \__\ \____\
//  \/___/  \/____/ \ \ \/  \/__/\/_/ \/_/ \/__/\/_/ \/__/\/____/
//                   \ \_\
//                    \/_/

@mixin min-height($height) {
  min-height: $height;
  height: auto !important;
  _height: $height;
}

@mixin min-width($width) {
  min-width: $width;
  width: auto !important;
  _width: $width;
}

//                                                __
//                                               /\ \__
//   ____     __   _____      __     _ __    __  \ \ ,_\    __
//  /',__\  /'__`\/\ '__`\  /'__`\  /\`'__\/'__`\ \ \ \/  /'__`\
// /\__, `\/\  __/\ \ \L\ \/\ \L\.\_\ \ \//\ \L\.\_\ \ \_/\  __/
// \/\____/\ \____\\ \ ,__/\ \__/.\_\\ \_\\ \__/.\_\\ \__\ \____\
//  \/___/  \/____/ \ \ \/  \/__/\/_/ \/_/ \/__/\/_/ \/__/\/____/
//                   \ \_\
//                    \/_/

// div.logo {
//   background: url("logo.png") no-repeat;
//   @include image-2x("logo2x.png", 100px, 25px);
// }

// outputing

// div.logo {
//   background: url("logo.png") no-repeat;
// }
// @media (min--moz-device-pixel-ratio: 1.3),
//        (-o-min-device-pixel-ratio: 2.6 / 2),
//        (-webkit-min-device-pixel-ratio: 1.3),
//        (min-device-pixel-ratio: 1.3),
//        (min-resolution: 1.3dppx) {
//         div.logo {
//             background-image: url("logo2x.png");
//             background-size: 100px 25px;
//         }
// }
@mixin image-2x($image, $width, $height) {
  @media (min--moz-device-pixel-ratio: 1.3), (-o-min-device-pixel-ratio: 2.6 / 2), (-webkit-min-device-pixel-ratio: 1.3), (min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx) {
    /* on retina, use image that's scaled by 2 */
    background-image: url($image);
    background-size: $width $height;
  }
}

// .pop {
//   background-color: red;
//   position: relative;
//   float: left;
//   padding: 20px;

//   .hello {
//     top: -8px;

//     @include triangle(up, 8px, red, white);
//   }
// }

// <div class="pop"><div class="hello"></div>hellomynameis</div>

@mixin triangle($direction, $size: 6px, $color: #222, $color2: transparent) {
  content: '';
  display: block;
  position: absolute;
  height: 0;
  width: 0;
  overflow: hidden;

  @if $direction == "up" {
    border-bottom: $size solid $color;
    border-left: (1 / 2 * $size) solid $color2;
    border-right: (1 / 2 * $size) solid $color2;
  }
  @else if $direction == "down" {
    border-top: $size solid $color;
    border-left: (1 / 2 * $size) solid $color2;
    border-right: (1 / 2 * $size) solid $color2;
  }
  @else if $direction == "left" {
    border-top: (1 / 2 * $size) solid $color2;
    border-bottom: (1 / 2 * $size) solid $color2;
    border-right: $size solid $color;
  }
  @else if $direction == "right" {
    border-top: (1 / 2 * $size) solid $color2;
    border-bottom: (1 / 2 * $size) solid $color2;
    border-left: $size solid $color;
  }
}
